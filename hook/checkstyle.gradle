allprojects { Project project ->
    apply plugin: 'checkstyle'

    checkstyle {
        toolVersion '6.13'
        ignoreFailures false
        showViolations true
//        配置checkstyle规则文件路径
        configFile rootProject.file('hook/checkstyle.xml')
    }
    // 脚本pre-commit 调用 checkstyle task 检查代码(修改提交的代码)
    task checkstyle(type: Checkstyle) {
        source '**/src/main/java'
        exclude '**/gen/**'
        exclude '**/R.java'
        exclude '**/BuildConfig.java'

        if (project.hasProperty('checkCommit') && project.property("checkCommit")) {
            List<String> fileS = filterCommitter(getChangeFiles())
            def includeList = new ArrayList<String>()
            for (String split : fileS) {
                String[] splits = split.split("/")
                String fileName = splits[splits.length - 1]
                includeList.add("**/" + fileName)
            }
            if (includeList.size() == 0) {
                exclude '**/*.java'
            } else {
                println("includeList==" + includeList)
                include includeList
            }
        } else {
            include '**/*.java'
        }
        classpath = files()
    }
}
//根据git status 获取 修改的文件
def getChangeFiles() {
    try {
        String changeInfo = 'git status -s'.execute(null, project.rootDir).text.trim()
        return changeInfo == null ? "" : changeInfo
    } catch (Exception e) {
        return ""
    }
}

//只对java代码
static def filterCommitter(String info) {
    ArrayList<String> filterList = new ArrayList<String>()
    String[] lines = info.split("\\n")
    for (String line : lines) {
        if (line.contains(".java")) {
            String[] split = line.trim().split(" ")
            for (String str : split) {
                if (str.contains(".java")) {
                    filterList.add(str)
                }
            }
        }
    }
    return filterList
}